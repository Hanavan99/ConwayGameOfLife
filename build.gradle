apply plugin: "java"

sourceSets {
	deploy
}

repositories {
	mavenCentral()
}

dependencies {
	compile files("lib/GUILogger.jar")
	compile "org.apache.logging.log4j:log4j-api:2.5"
	runtime "org.apache.logging.log4j:log4j-core:2.5"
	deployCompile "com.sparkjava:spark-core:2.2"
}

task run(type: JavaExec) {
	main = "com.conway.main.Main"
	classpath = sourceSets.main.runtimeClasspath
	dependsOn classes
}

task deployJar(type: Jar) {
	from files(sourceSets.deploy.output.classesDir)
	from files(sourceSets.deploy.output.resourcesDir)
	from {
		configurations.deployCompile.collect {
			zipTree(it)
		}
	}
	exclude "META-INF/*"
	manifest {
		attributes "Main-Class": "com.conway.deploy.Main"
	}
	baseName = "deploy"
	dependsOn deployClasses
	dependsOn jar
}

task appletJar {
	AntBuilder ant = getAnt()
	File keystore = new File("deploy.jks")
	File unsignedJar = jar.archivePath
	File signedJar = new File(unsignedJar.getParentFile(), "applet.jar")
	getInputs().file(unsignedJar)
	getOutputs().file(signedJar).upToDateWhen {
		return unsignedJar.exists() && signedJar.exists() && unsignedJar.lastModified() < signedJar.lastModified()
	}
	doLast {
		ant.signjar(
			jar: unsignedJar.getAbsolutePath(),
			alias: "deploy",
			keystore: keystore.getAbsolutePath(),
			storepass: System.getenv("KEYSTOREPASS"),
			signedjar: signedJar.getAbsolutePath()
		)
	}
	dependsOn jar
}

task stage {
	dependsOn appletJar
	dependsOn deployJar
}

jar {
	manifest {
		attributes "Permissions": "sandbox",
			"Codebase": "hanavan99.github.io",
			"Application-Name": "Conway's Game of Life"
	}
}

build {
	dependsOn stage
}
